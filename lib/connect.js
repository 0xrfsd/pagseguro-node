"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_objectSpread2=_interopRequireDefault(require("@babel/runtime/helpers/objectSpread")),xml2js=require("fast-xml-parser"),logger=require("./logger"),getBaseUrl=require("./utils").getBaseUrl,validate=require("./validate"),resources=require("./resources");module.exports=function(a){/**
     * Validate params
     */if(!validate.connect(a))throw new TypeError("Erro ao conectar com pagseguro! Verifique as configura\xE7\xF5es: [LINK REPOSIT\xD3RIO]");/**
     * Log
     */var b=console.log;a.debug&&(a.logger?b=logger:b=logger(a.log,a.debug));/**
     * Config
     */var c={logger:b,env:a.env,appId:a.appId,appKey:a.appKey,notificationURL:a.notificationURL,redirectURL:a.redirectURL,qs:{email:a.email,token:a.token},base:{base:getBaseUrl(a.env,"base"),static:getBaseUrl(a.env,"static"),webservice:getBaseUrl(a.env,"webservice")},headers:{"Content-Type":"application/xml"},transform:function transform(a,c){//console.log(response)
var d=200>=c.statusCode?"success":"error";if(!0===xml2js.validate(a)){var f=xml2js.parse(a,{trim:!0});return 200>=c.statusCode?b.info({statusCode:c.statusCode,statusMessage:c.statusMessage,status:d,content:f}):(f=f.errors.error,b.error({statusCode:c.statusCode,statusMessage:c.statusMessage,status:d,content:f})),{statusCode:c.statusCode,status:d,content:f}}var e={statusCode:c.statusCode,status:d,content:a};return Array.isArray(e.content)||(e.content=[{code:e.statusCode,message:e.content}]),b.error((0,_objectSpread2.default)({},e,{statusCode:c.statusCode,statusMessage:c.statusMessage})),e},jsonToXml:function jsonToXml(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{format:!0},c=new xml2js.j2xParser(b);return c.parse(a)},xmlToJson:function xmlToJson(){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{trim:!0};return xml2js.parse(body,a)}/**
     * Resources
     */},d={};return Object.keys(resources).forEach(function(a){d[a]=(0,_objectSpread2.default)({},resources[a]),Object.keys(d[a]).forEach(function(b){validate.isFunction(d[a][b])&&(d[a][b]=d[a][b].bind(null,c))})}),d};